<%- include("templates/header") %>


<form action="/updateItem" method="post" enctype="multipart/form-data">
    <input type="hidden" name="item_id" value="<%= item._id %>">
    <div class="container p-0" style="height: 90vh; overflow-y: auto;">
        <div class="p-4 mt-2">
            <div class="d-flex justify-content-between">
                <a href="/collections"><button type="button" class="btn fs-6" style="background-color: #dcdddb;">Cancel</button></a>
                <h3>Edit Item</h3>
                <button type="submit" class="btn fs-6" style="background-color: #A7A64D;">Update</button>
            </div>
            <div class="d-flex justify-content-center my-3">
                <img id="imagePreview" src="https://res.cloudinary.com/deisln2yq/image/upload/c_scale,w_100,h_100/<%= item.image_id %>" style="max-width: 400px; max-height: 400px;" height="300px" />
            </div>

            <div class="d-flex justify-content-center py-1">
                <input class = "form-control" type="file" id="mypic-input" name="image" accept="image/*" />
            </div>
        </div>
        <div class="container">
            <div class="form-floating py-3">
                <input name="title" type="title" class="form-control" placeholder="title" value="<%= item.title %>">
                <label for="floatingInput">Title</label>
            </div>

            <div class="form-floating py-3">
                <input name="descripton" type="description" class="form-control" placeholder="description" value="<%= item.description %>">
                <label for="floatingInput">Description</label>
            </div>

            <div class="form-floating py-3">
                <select class="form-select" id="visibility" name="visibility">
                    <option value="global" <%= item.visibility === 'global' ? 'selected' : '' %>>Global (default)</option>
                    
                    <% for (let group of groups) { %>
                        <option value="<%= group.groupname %>" <%= item.visibility === group.groupname ? 'selected' : '' %>> <%= group.groupname %> </option>
                    <% } %>
                    
                </select>
                <label for="floatingInput">Edit Visibility</label>
                <div class="invalid-feedback">
                    Please select a valid visibility. 
                </div>
            </div>

            <div class="form-floating py-3">
                <select class="form-select" id="status" name="status" required="">
                    <option selected>Available</option>
                    <option>Unavailable</option>
                </select>
                <label for="status">Edit Status</label>
                <div class="invalid-feedback">
                    Please select a valid status. 
                </div>
            </div>
        </div>
    </div>
</form>

<!-- New form for the delete button -->
<div class="container" style="margin-bottom: 100px;">
    <div class="row">
        <div class="d-flex justify-content-center">
            <button class="btn btn-danger" type="button" onclick="openModal()">Delete</button>
        </div>
    </div>
</div>

<!-- Modal HTML -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <p>Are you sure you want to delete this item?</p>
        <form id="deleteForm" action="/items/<%= item._id %>/delete" method="POST">
            <button type="submit" class="btn btn-danger">Yes</button>
            <button type="button" class="btn btn-secondary" onclick="closeModal()">No</button>
        </form>
    </div>
</div>

<script>
    const imageUpload = document.getElementById('mypic-input');
    const imagePreview = document.getElementById('imagePreview');

    imageUpload.addEventListener('change', function() {
        if (this.files && this.files[0]) {
            const reader = new FileReader();

            reader.onload = function(e) {
                imagePreview.src = e.target.result;
            };

            reader.readAsDataURL(this.files[0]);
        }
    });

    // Modal functionality
    function openModal() {
        document.getElementById('deleteModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('deleteModal').style.display = 'none';
    }

    // Close the modal when the user clicks outside of it
    window.onclick = function(event) {
        const modal = document.getElementById('deleteModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }
</script>

<!-- Modal CSS -->
<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        padding-top: 60px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    .btn-danger, .btn-secondary {
        margin: 5px;
    }
</style>

<%- include("templates/footer") %>